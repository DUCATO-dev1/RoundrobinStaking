{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "exchangeFactory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "lp_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "exchange",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AddVoting",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "exchange",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RemoveVoting",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_MAX_VOTING_POOL_COUNT",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "exchange",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "addVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lp",
				"outputs": [
					{
						"internalType": "contract ILPPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "lpProductHarvest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "lpProductUpdate",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxPoolVotes",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "poolVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "removeAllVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "exchange",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "removeVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "maxPool",
						"type": "uint8"
					}
				],
				"name": "setMaxPoolVotes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userPoolVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "userRemainVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "userVotingLPCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lpIndex",
						"type": "uint256"
					}
				],
				"name": "userVotingPoolAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lpIndex",
						"type": "uint256"
					}
				],
				"name": "userVotingPoolAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVoting(address,uint256)": {
					"details": "add voting for LP Requirements: - LP exists - User has enough vote left emit AddVoting"
				},
				"lpProductHarvest(address)": {
					"details": "get call before LP changed",
					"params": {
						"user": "lp owner user"
					}
				},
				"lpProductUpdate(address)": {
					"details": "get call after LP changed",
					"params": {
						"user": "lp owner user"
					}
				},
				"maxPoolVotes()": {
					"details": "return max allowed voting pools"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"removeAllVoting()": {
					"details": "remove all voting for LP emit RemoveVoting"
				},
				"removeVoting(address,uint256)": {
					"details": "remove voting for LP Requirements: - LP exists emit RemoveVoting"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setMaxPoolVotes(uint8)": {
					"details": "update max pool vote for single user"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"userRemainVotes(address)": {
					"details": "return remaining votes owned by user"
				},
				"userVotingLPCount(address)": {
					"details": "Return total number of voted LP by user"
				},
				"userVotingPoolAddress(address,uint256)": {
					"details": "return LP address at index"
				},
				"userVotingPoolAmount(address,uint256)": {
					"details": "return total of vote for LP at index"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/staking/extensions/VSPoolVoting.sol": "VSPoolVoting"
		},
		"evmVersion": "constantinople",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21",
			"license": "MIT",
			"urls": [
				"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2",
				"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31",
				"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS"
			]
		},
		"contracts/interfaces/IDucatoFactory.sol": {
			"keccak256": "0x45ae15779e2e4e4704c967ba244d833ff448ed7dcf526e1a5989ff54f6ccb477",
			"license": "MIT",
			"urls": [
				"bzz-raw://36255ca78bcd03e33ea037936295b8095af22874df364823160eebef85670455",
				"dweb:/ipfs/QmU9XQf2d1yDhZzpF3Wk1hLAaPazogZdQmxaG5ZXPPyGz8"
			]
		},
		"contracts/interfaces/IHookCallee.sol": {
			"keccak256": "0xd02a3bc80b32ef7449f3ee34735448ab258696fa79265cff846cb95fc2dd3e9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://5193961743c83809a1b2e17066660d692a643c3dd219ba5f252358f3f66c2769",
				"dweb:/ipfs/Qmdt3cYqLxSkbUt99KqjvC4rAkRcmf4iKE73Ebw5TcctKC"
			]
		},
		"contracts/interfaces/ILPPool.sol": {
			"keccak256": "0xfebb7f7018f6287ba79e1b2289950592d102e79402ef0819ab72d57be000e510",
			"license": "MIT",
			"urls": [
				"bzz-raw://3dff39fe23b1916f5bbaa75320ed4b82af3ec12c9cf560f2e4eba3bb8f9d766e",
				"dweb:/ipfs/QmQQxbFvZKiySkV65hFH5WHBvKAPSKc3am1w9Cz4kqXW7r"
			]
		},
		"contracts/interfaces/voting/IPoolVoting.sol": {
			"keccak256": "0xc6754ba5d1cc49aa8ea3cd335aa86df4870a08fe83cb1152aded91c5a66ce098",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea2ed8eed51ba70e4e48e5f65b3090d842a7a34368c45568ac88e42dfaef84e1",
				"dweb:/ipfs/Qmd7WnhDFtUPpKs1A5Vi5SxKht7jfS32SBRFDgsHov8JoY"
			]
		},
		"contracts/staking/extensions/VSPoolVoting.sol": {
			"keccak256": "0x525dd530cc846251ef76b315a125f44dfc2daffd530802b3127b16a8ad542594",
			"license": "MIT",
			"urls": [
				"bzz-raw://edfc6ef10df637b944ab7598e131f91b3c0db3522f2a12779cebe84217a5ea16",
				"dweb:/ipfs/QmUmMMLPuYeLW1BLMgUu75fkHb2A9g4UZEkKdsePUvMsEN"
			]
		},
		"contracts/voting/PoolVoting.sol": {
			"keccak256": "0x6d176e3e0c77a2d616edf52e21e280a9338fa336320190ab1f6e8f082f46f7ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://798eed8087ede7c9cf34168fc912636bbada1fa0dcac93c7fe2b5c517b2de11f",
				"dweb:/ipfs/QmZRrVeo7xyP5tjscojCekfNT73DvLEbfR26EKJJ14JyEg"
			]
		}
	},
	"version": 1
}